name: PR Tests
# This workflow runs on pull requests to test the code across a single platform.

permissions:
  contents: read  # Allow the workflow to read repository contents
  pull-requests: write  # Allow the workflow to write to pull requests

on:
  pull_request:
    # Trigger the workflow on PR events, specifically when opened or updated.
    paths:
      - '**/*.rs'  # Run only if there are changes in Rust source files.
    types: [opened, synchronize, reopened]  # Triggers when the PR is opened, synchronized, or reopened.

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      cargo-tarpaulin: ${{ steps.cargo-tarpaulin.outputs.installed }}
      cargo-nextest: ${{ steps.cargo-nextest.outputs.installed }}
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-tarpaulin
        id: cargo-tarpaulin
        run: cargo install cargo-tarpaulin || true
      - name: Install cargo-nextest
        id: cargo-nextest
        run: cargo install cargo-nextest || true

  coverage:
    needs: setup
    name: Codecov Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - run: cargo tarpaulin --all-features --out xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5.4.3

  release-test:
    needs: setup
    name: Platform Tests (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-nextest-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Run tests using cargo-nextest
        run: cargo nextest run --all-features  # Run all tests with nextest.

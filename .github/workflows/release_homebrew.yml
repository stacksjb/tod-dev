# .github/workflows/release.yml
# Start Homebrew Releaser when a new GitHub release is created
on:
  release:
    types: [published]
  workflow_dispatch:
    # Allow manual triggering of the workflow

jobs:
  homebrew-releaser:
      runs-on: ubuntu-latest
      name: homebrew-releaser
      steps:
        - name: Release project to Homebrew tap
          uses: Justintime50/homebrew-releaser@v2
          with:
            # The name of the homebrew tap to publish your formula to as it appears on GitHub.
            # Required - strings
            homebrew_owner: stacksjb
            homebrew_tap: homebrew-tod
  
            # The name of the folder in your homebrew tap where formula will be committed to.
            # Default is shown - string
            formula_folder: Formula
  
            # The Personal Access Token (saved as a repo secret) that has `repo` permissions for the repo running the action AND Homebrew tap you want to release to.
            # Required - string
            github_token: ${{ secrets.TOD_CONTENTS_READ_WRITE }}
  
            # Git author info used to commit to the homebrew tap.
            # Defaults are shown - strings
            commit_owner: Jesse Stanford
            commit_email: stacksjb@users.noreply.github.com
  
            # Install command for your formula.
            # Required - string
            install: "bin.install 'tod'"

            test: |
             'assert_match("my script output", shell_output("my-script-command"))'
  
            # Custom dependencies in case other formulas are needed to build the current one.
            # Optional - multiline string
            depends_on: |
              do
                expected_output = "Tod #{version}"
                assert_match expected_output, shell_output("#{bin}/tod -V")
              end
  
            # Allows you to set a custom download strategy.
            # NOTE: You'll need to implement the strategy and add it to your tap repository.
            # Docs: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
            # Optional - string
            download_strategy: CurlDownloadStrategy
  
            # Adds URL and checksum targets for different OS and architecture pairs. Using this option assumes 
            # a tar archive exists on your GitHub repo with the following URL pattern (this cannot be customized):
            # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz'
            # Darwin AMD pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
            # Linux ARM pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
            # Optional - booleans
            target_darwin_amd64: true
            target_darwin_arm64: true
            target_linux_amd64: true
            target_linux_arm64: true
  
            update_readme_table: false
  
            # Skips committing the generated formula to a homebrew tap (useful to verify results on a first run).
            # Default is shown - boolean
            skip_commit: true
  
            # Logs debugging info to console.
            # Default is shown - boolean
            debug: true
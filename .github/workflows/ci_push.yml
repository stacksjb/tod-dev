on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

name: ci

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cargo-cache: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4.2.2

      # Cache Rust dependencies
      - name: Cache Cargo dependencies
        id: cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

  check:
    needs: setup
    runs-on: ubuntu-latest
    name: Cargo Check
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo check

  todos:
    needs: setup
    runs-on: ubuntu-latest
    name: TODO and FIXME
    steps:
      - uses: actions/checkout@v4.2.2
      - run: ./scripts/lint_string.sh "TODO "
      - run: ./scripts/lint_string.sh "TODO:"
      - run: ./scripts/lint_string.sh "FIXME "
      - run: ./scripts/lint_string.sh "FIXME:"
      - run: ./scripts/lint_string.sh "todo "
      - run: ./scripts/lint_string.sh "todo:"
      - run: ./scripts/lint_string.sh "fixme "
      - run: ./scripts/lint_string.sh "fixme:"
      - run: ./scripts/lint_string.sh "dbg!"

  test:
    needs: setup
    runs-on: ubuntu-latest
    name: Cargo Tests
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all-features

  fmt:
    needs: setup
    runs-on: ubuntu-latest
    name: Rust-fmt (Cargo Format)
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    needs: setup
    runs-on: ubuntu-latest
    name: Cargo Clippy (Lint Check)
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo clippy --all-targets --all-features -- -D warnings
